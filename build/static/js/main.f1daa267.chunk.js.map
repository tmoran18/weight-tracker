{"version":3,"sources":["firebase.js","components/Logo.js","components/LoginBtn.js","components/Navbar.js","components/Spinner.js","components/Input.js","components/Submit.js","components/LineGraph.js","components/LineGraphRight.js","components/Stats.js","App.js","index.js"],"names":["config","apiKey","process","authDomain","AUTH_DOMAIN","databaseURL","DB_URL","projectId","PROJECT_ID","storageBucket","STORAGE_BUCKET","messagingSenderId","TRACKER_SENDER_ID","appId","APP_ID","firebase","provider","GoogleAuthProvider","auth","Logo","xmlns","height","viewBox","width","d","fill","LoginBtn","user","logout","login","className","onClick","Navbar","Spinner","src","alt","Input","onChange","title","value","placeholder","htmlFor","type","name","e","target","required","Submit","handleSubmit","LineGraph","graphData","style","background","margin","data","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","enableGridX","colors","color","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","theme","fontSize","fontFamily","textColor","legends","LineGraphRight","maxHeight","boxShadow","borderRadius","paddingBottom","enableGridY","Stats","weeklyLoss","Math","sign","role","aria-label","toString","substr","App","startDate","Date","useState","weight","setWeight","pushups","setPushUps","setData","pushupData","setPushupData","loading","setLoading","setUser","weekIndex","setWeekIndex","setWeeklyLoss","useEffect","onAuthStateChanged","database","ref","on","snapshop","weeks","val","weeksLength","Object","keys","length","buildGraphData","weeklyLosses","console","log","id","pushupGraphData","sortData","forEach","element","index","push","x","format","y","addWeeks","weeklyLossData","round","precision","multiplier","pow","dataToSort","entries","entry","sort","a","b","writeDatabase","weeksRef","week","signInWithPopup","then","result","signOut","displayName","preventDefault","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1daa267.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\r\nimport React from \"react\";\r\n\r\nconst createConfig = () => {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    const config = {\r\n      apiKey: process.env.REACT_APP_API_KEY,\r\n      authDomain: process.env.REACT_APP_WEIGHT_TRACKER_AUTH_DOMAIN,\r\n      databaseURL: process.env.REACT_APP_WEIGHT_TRACKER_DB_URL,\r\n      projectId: process.env.REACT_APP_WEIGHT_TRACKER_PROJECT_ID,\r\n      storageBucket: process.env.REACT_APP_WEIGHT_TRACKER_STORAGE_BUCKET,\r\n      messagingSenderId: process.env.REACT_APP_WEIGHT_TRACKER_SENDER_ID,\r\n      appId: process.env.REACT_APP_WEIGHT_TRACKER_APP_ID,\r\n    };\r\n    return config;\r\n  } else {\r\n    const config = {\r\n      apiKey: process.env.REACT_APP_API_KEY,\r\n      authDomain: process.env.AUTH_DOMAIN,\r\n      databaseURL: process.env.DB_URL,\r\n      projectId: process.env.PROJECT_ID,\r\n      storageBucket: process.env.STORAGE_BUCKET,\r\n      messagingSenderId: process.env.TRACKER_SENDER_ID,\r\n      appId: process.env.APP_ID,\r\n    };\r\n    return config;\r\n  }\r\n};\r\n\r\n// Initialize Firebase\r\nconst config = createConfig();\r\nfirebase.initializeApp(config);\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport default firebase;\r\n","import React from \"react\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        height=\"24\"\r\n        viewBox=\"0 0 24 24\"\r\n        width=\"24\"\r\n      >\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path d=\"M16 18l2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z\" />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\n\r\nconst LoginBtn = ({ user, logout, login }) => {\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <button className=\"login_btn\" onClick={logout}>\r\n          Logout\r\n        </button>\r\n      ) : (\r\n        <button className=\"login_btn\" onClick={login}>\r\n          Log in with Google\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginBtn;\r\n","import React from \"react\";\r\nimport Logo from \"./Logo\";\r\nimport LoginBtn from \"./LoginBtn\";\r\n\r\nconst Navbar = ({ user, login, logout }) => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Logo />\r\n      <div className=\"logo\">Weight Tracker</div>\r\n      <LoginBtn user={user} login={login} logout={logout} />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner_container\">\r\n      <img src=\"img/pac_man_spinner.gif\" alt=\"pac man spinner\" />\r\n      Loading...\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Input = ({ onChange, title, value, placeholder }) => {\r\n  return (\r\n    <div className=\"input_container\">\r\n      <label className=\"blue\" htmlFor=\"title\">\r\n        {title}\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"weight\"\r\n        value={value === null ? \"\" : value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        className=\"input\"\r\n        required\r\n      />\r\n      <span className=\"input_placeholder\">{placeholder}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Submit = ({ handleSubmit }) => {\r\n  return (\r\n    <div className=\"submit_btn_container\">\r\n      <button onClick={handleSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Submit;\r\n","import React from \"react\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\n\r\nconst LineGraph = ({ graphData }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"500px\",\r\n        background: \"\",\r\n        margin: \"2rem\",\r\n      }}\r\n    >\r\n      <ResponsiveLine\r\n        data={graphData}\r\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n        xScale={{ type: \"point\" }}\r\n        yScale={{\r\n          type: \"linear\",\r\n          min: 75,\r\n          max: 98,\r\n          stacked: false,\r\n          reverse: false,\r\n        }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n          orient: \"bottom\",\r\n          tickSize: 0,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: \"Date\",\r\n          legendOffset: 36,\r\n          legendPosition: \"middle\",\r\n        }}\r\n        axisLeft={{\r\n          orient: \"left\",\r\n          tickSize: 0,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: \"Weight - KG\",\r\n          legendOffset: -40,\r\n          legendPosition: \"middle\",\r\n        }}\r\n        enableGridX={false}\r\n        colors={(d) => d.color}\r\n        pointSize={7}\r\n        pointColor=\"#ffffff\"\r\n        pointBorderWidth={2}\r\n        pointBorderColor={{ from: \"serieColor\" }}\r\n        pointLabel=\"y\"\r\n        pointLabelYOffset={-12}\r\n        useMesh={false}\r\n        theme={{\r\n          fontSize: 16,\r\n          fontFamily: \"Sans-serif\",\r\n          textColor: \"#00b2ff\",\r\n        }}\r\n        legends={[]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\n\r\nconst LineGraphRight = ({ graphData }) => {\r\n  return (\r\n    <div\r\n      className=\"pushups_graph\"\r\n      style={{\r\n        height: \"500px\",\r\n        background: \"\",\r\n        maxHeight: \"490px\",\r\n        margin: \"2rem\",\r\n        boxShadow: \"0 8px 18px rgba(0, 0, 0, 0.08)\",\r\n        borderRadius: \"10px\",\r\n        paddingBottom: \"100px\",\r\n      }}\r\n    >\r\n      <ResponsiveLine\r\n        data={graphData}\r\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n        xScale={{ type: \"point\" }}\r\n        enableGridY={false}\r\n        yScale={{\r\n          type: \"linear\",\r\n          min: 0,\r\n          max: 110,\r\n          stacked: false,\r\n          reverse: false,\r\n        }}\r\n        axisTop={null}\r\n        axisRight={{\r\n          orient: \"right\",\r\n          tickSize: 0,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: \"Pushups\",\r\n          legendOffset: 40,\r\n          legendPosition: \"middle\",\r\n        }}\r\n        axisBottom={null}\r\n        axisLeft={null}\r\n        enableGridX={false}\r\n        colors={(d) => d.color}\r\n        pointSize={7}\r\n        pointColor=\"#ffffff\"\r\n        pointBorderWidth={2}\r\n        pointBorderColor={{ from: \"serieColor\" }}\r\n        pointLabel=\"y\"\r\n        pointLabelYOffset={-12}\r\n        useMesh={false}\r\n        theme={{\r\n          fontSize: 16,\r\n          fontFamily: \"Sans-serif\",\r\n          textColor: \"red\",\r\n        }}\r\n        legends={[]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineGraphRight;\r\n","import React from \"react\";\r\n\r\nconst Stats = ({ weeklyLoss }) => {\r\n  const weeklyLossNegOrPos = (weeklyLoss) => {\r\n    return Math.sign(weeklyLoss) ? \"Postivie\" : \"negative\";\r\n  };\r\n  return (\r\n    <div className=\"stats\">\r\n      <div>\r\n        <span>Weekly Loss: </span>\r\n        {Math.sign(weeklyLoss) === -1 ? (\r\n          <span className=\"red\" role=\"img\" aria-label=\"sad emoji face\">\r\n            {`+${weeklyLoss.toString().substr(1)}KG`} 😢\r\n          </span>\r\n        ) : (\r\n          <span className=\"green\" role=\"img\" aria-label=\"smiling emoji face\">\r\n            {`-${weeklyLoss}KG`} 😃\r\n          </span>\r\n        )}\r\n        <span className=\"red\"></span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase, { auth, provider } from \"./firebase.js\";\r\nimport { addWeeks, format } from \"date-fns\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Spinner from \"./components/Spinner\";\r\nimport Input from \"./components/Input\";\r\nimport Submit from \"./components/Submit\";\r\nimport LineGraph from \"./components/LineGraph\";\r\nimport LineGraphRight from \"./components/LineGraphRight\";\r\nimport Stats from \"./components/Stats\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const startDate = new Date(\"2020/07/20\");\r\n  const dateFormat = \"dd/MM\";\r\n  const [weight, setWeight] = useState(null);\r\n  const [pushups, setPushUps] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [pushupData, setPushupData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [weekIndex, setWeekIndex] = useState(null);\r\n  const [weeklyLoss, setWeeklyLoss] = useState(null);\r\n\r\n  // Onload get data from firebase database\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    auth.onAuthStateChanged((user) => user && setUser(user));\r\n    const weeksRef = firebase.database().ref(\"weeks\");\r\n    weeksRef.on(\"value\", (snapshop) => {\r\n      let weeks = snapshop.val();\r\n      // Get the length of data in DB\r\n      const weeksLength = Object.keys(weeks);\r\n      setWeekIndex(weeksLength.length);\r\n      buildGraphData(weeks);\r\n      setWeeklyLoss(weeklyLosses(weeks));\r\n      let key;\r\n      key = process.env.REACT_APP_API_KEY;\r\n      console.log(key);\r\n    });\r\n  }, []);\r\n\r\n  const login = () => {\r\n    auth.signInWithPopup(provider).then((result) => {\r\n      const user = result.user;\r\n      setUser(user);\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    auth.signOut().then(() => {\r\n      setUser(null);\r\n    });\r\n  };\r\n\r\n  // Build an object to pass to the Line Graph\r\n  const buildGraphData = (weeks) => {\r\n    // Create a graphData Object with empty data array for filling\r\n    const graphData = [\r\n      {\r\n        id: \"weight tracker\",\r\n        color: \"#00b2ff\",\r\n        data: [],\r\n      },\r\n    ];\r\n\r\n    const pushupGraphData = [\r\n      {\r\n        id: \"weight tracker\",\r\n        color: \"#ff0000\",\r\n        data: [],\r\n      },\r\n    ];\r\n\r\n    // Sort the data by index\r\n    const arr = sortData(weeks);\r\n\r\n    // iterate of data to build line graph data object\r\n    // manually set the start date for the first index\r\n    // add 1 week onto date for all other indexes\r\n    arr.forEach((element, index) => {\r\n      // First element, give start date and first weight\r\n      index === 0\r\n        ? graphData[0].data.push({\r\n            x: format(startDate, dateFormat),\r\n            y: element.weight,\r\n          }) &&\r\n          pushupGraphData[0].data.push({\r\n            x: format(startDate, dateFormat),\r\n            y: element.pushups,\r\n          })\r\n        : // Else give a date + No. of weeks and format date and weight\r\n          graphData[0].data.push({\r\n            x: format(addWeeks(startDate, index), dateFormat),\r\n            y: element.weight,\r\n          }) &&\r\n          pushupGraphData[0].data.push({\r\n            x: format(addWeeks(startDate, index), dateFormat),\r\n            y: element.pushups,\r\n          });\r\n    });\r\n    setData(graphData);\r\n    setPushupData(pushupGraphData);\r\n    setLoading(false);\r\n  };\r\n\r\n  // Get the data for the weekly loss\r\n  const weeklyLosses = (data) => {\r\n    const weeklyLossData = sortData(data);\r\n    return round(\r\n      weeklyLossData[weeklyLossData.length - 2].weight -\r\n        weeklyLossData[weeklyLossData.length - 1].weight,\r\n      10\r\n    );\r\n  };\r\n\r\n  // Rounding function that handles negative numbers\r\n  const round = (value, precision) => {\r\n    const multiplier = Math.pow(10, precision || 0);\r\n    return Math.round(value * multiplier) / multiplier;\r\n  };\r\n\r\n  // Sort data by index ASC\r\n  const sortData = (data) => {\r\n    const dataToSort = [];\r\n    Object.entries(data).forEach((entry) => {\r\n      dataToSort.push(entry[1]);\r\n    });\r\n    // Return the array by sorting numerically by ID\r\n    return dataToSort.sort((a, b) => a.id - b.id);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!weight) {\r\n      alert(\"weight must not be empty\");\r\n    } else if (!pushups) {\r\n      alert(\"pushups must not be empty\");\r\n    } else {\r\n      writeDatabase();\r\n      setWeight(\"\");\r\n      setPushUps(\"\");\r\n    }\r\n  };\r\n\r\n  const writeDatabase = (e) => {\r\n    const weeksRef = firebase.database().ref(\"weeks\");\r\n    // Get state to write\r\n    const week = {\r\n      id: weekIndex,\r\n      weight: weight,\r\n      pushups: pushups,\r\n    };\r\n    weeksRef.push(week);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <Navbar user={user} login={login} logout={logout} />\r\n      </header>\r\n      {user ? (\r\n        <section>\r\n          <span className=\"username\">Welcome {user.displayName}</span>\r\n          <div className=\"container\">\r\n            <Input\r\n              title={\"Your weight this week\"}\r\n              onChange={(value) => setWeight(value)}\r\n              value={weight}\r\n              placeholder={\"KG\"}\r\n            />\r\n            <Input\r\n              title={\"How many Push Ups this week\"}\r\n              onChange={(value) => setPushUps(value)}\r\n              value={pushups}\r\n            />\r\n          </div>\r\n          <Submit handleSubmit={handleSubmit} />\r\n          {loading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <div className=\"graph_container\">\r\n              <LineGraph graphData={data} />\r\n              <LineGraphRight className=\"second\" graphData={pushupData} />\r\n              <Stats weeklyLoss={weeklyLoss} loading={loading} />\r\n            </div>\r\n          )}\r\n        </section>\r\n      ) : (\r\n        <section className=\"login_msg\">\r\n          Please login with google to view this app\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}